1. Создать сущности для базы данных "Магазин ноутбуков":
    Тип ноутбука(производитель, модель, дата производства, процессор, память)
    Производители(имя)
    Процессоры(производитель, частота, модель)
    Память(производитель, размер)
    Склад ноутбуков(тип ноутбука, количество, цена)
    Продажи(склад ноутбуков, дата продажи, количество)

 domain
    hw7.notes.domain.Notebook
    hw7.notes.domain.Vendor
    hw7.notes.domain.CPU
    hw7.notes.domain.Memory
    hw7.notes.domain.Store
    hw7.notes.domain.Sales




2.
    Создать приложение магазин ноутбуков со следующими функциями:
        Создать процессор
        Создать память
        Создать производителя
        Создать тип ноутбука
        Принять на склад партию ноутбуков (тип ноутбука, количество, цена)
        Продать указанное количество ноутбуков со склада(id склада, количество)

     dao
        hw7.notes.dao.NotebookDao
            Long create(Notebook notebook)
            Notebook read(Long ig)
            boolean update(Notebook notebook)
            boolean delete(Notebook notebook)
            List<Notebook> findAll()
        hw7.notes.dao.VendorDao
            Long create(Vendor vendor)
            Vendor read(Long ig)
            boolean update(Vendor vendor)
            boolean delete(Vendor vendor)
            List<Vendor> findAll()
        hw7.notes.dao.CPUDao
            Long create(CPU cpu)
            CPU read(Long ig)
            boolean update(CPU cpu)
            boolean delete(CPU cpu)
            List<CPU> findAll()
        hw7.notes.dao.MemoryDao
            Long create(Memory memory)
            Memory read(Long ig)
            boolean update(Memory memory)
            boolean delete(Memory memory)
            List<Memory> findAll()
        hw7.notes.dao.StoreDao
            Long create(Store store)
            Store read(Long ig)
            boolean update(Store store)
            boolean delete(Store store)
            List<Store> findAll()
        hw7.notes.dao.SalesDao
            Long create(Sales store)
            Sales read(Long ig)
            boolean update(Sales store)
            boolean delete(Sales store)
            List<Sales> findAll()

        hw7.notes.dao.NotebookDaoImpl
        hw7.notes.dao.VendorDaoImpl
        hw7.notes.dao.CPUDaoImpl
        hw7.notes.dao.MemoryDaoImpl
        hw7.notes.dao.StoreDaoImpl
        hw7.notes.dao.SalesDaoImpl

     service
        hw7.notes.service.NotebookService
            Long receive(notebookId id, int amount, double price)
            Long sale(storeId, int amount)
        hw7.notes.service.NotebookServiceImpl
     view
        hw7.notes.service.Menu
            main()
3.

Добавить в приложение ноутбуков следующие функции
 Изменить процессор
 Изменить память
 Изменить имя производителя
 Изменить тип ноутбука
 Списать со склад ноутбуки (ключ, количество)


 service
    hw7.notes.service.NotebookService
        boolean updateCPU(CPU cpu)
        boolean updateMemory(Memory memory)
        boolean updateVendor(Vendor vendor)
        boolean updateNotebook(Notebook notebook)
        boolean removeFromStore(Store store, int amount)
    hw7.notes.service.NotebookServiceImpl
 view
    hw7.notes.service.Menu
        main()


4.
. Добавить в приложение ноутбуков следующие функции:
 Показать все ноутбуки на складе (пользователь указывает размер порции)
 Показать все ноутбуки которых больше указанного количества
 Показать все ноутбуки по указанному имени производителя процессора
 Показать все ноутбуки на складе
 Показать типы ноутбуков, оставшиеся на складе по каждому производителю
 Получить объем продаж ноутбуков по каждому дню


 service
    hw7.notes.service.NotebookService
        List<Notebook> getNotebooksByPortion(int size)
        List<Notebook> getNotebooksGtAmount(int amount)
        List<Notebook> getNotebooksByCpuVendor(Vendor cpuVendor)
        List<Notebook> getNotebooksFromStore()
        List<Notebook> getNotebooksStorePresent()
        Map<Notebook, int> getSalesByDays()
    hw7.notes.service.NotebookServiceImpl
 view
    hw7.notes.service.Menu
        main()